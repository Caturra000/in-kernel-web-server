<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph (server_kernel)</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>_copy_to_iter (9,986 samples, 0.82%)</title><rect x="290.6" y="325" width="9.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="293.60" y="335.5" ></text>
</g>
<g >
<title>__list_add_valid (1,328 samples, 0.11%)</title><rect x="158.3" y="405" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="161.26" y="415.5" ></text>
</g>
<g >
<title>__memcpy (5,507 samples, 0.45%)</title><rect x="1083.9" y="357" width="5.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1086.91" y="367.5" ></text>
</g>
<g >
<title>__build_skb_around (2,701 samples, 0.22%)</title><rect x="1149.6" y="341" width="2.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1152.56" y="351.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1,500 samples, 0.12%)</title><rect x="228.5" y="357" width="1.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="231.53" y="367.5" ></text>
</g>
<g >
<title>ip_finish_output (617 samples, 0.05%)</title><rect x="435.0" y="309" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="437.98" y="319.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (533 samples, 0.04%)</title><rect x="314.3" y="357" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="317.28" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (979 samples, 0.08%)</title><rect x="279.3" y="341" width="0.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="282.27" y="351.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (3,248 samples, 0.27%)</title><rect x="1027.9" y="325" width="3.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1030.91" y="335.5" ></text>
</g>
<g >
<title>release_sock (4,771 samples, 0.39%)</title><rect x="245.8" y="373" width="4.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="248.75" y="383.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (33,999 samples, 2.78%)</title><rect x="280.2" y="357" width="32.9" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="283.22" y="367.5" >sk..</text>
</g>
<g >
<title>ip_local_deliver (1,361 samples, 0.11%)</title><rect x="534.3" y="165" width="1.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="537.34" y="175.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (2,476 samples, 0.20%)</title><rect x="339.0" y="373" width="2.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="341.95" y="383.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (12,779 samples, 1.05%)</title><rect x="1090.5" y="357" width="12.3" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1093.46" y="367.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.0 (2,296 samples, 0.19%)</title><rect x="1073.7" y="341" width="2.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1076.71" y="351.5" ></text>
</g>
<g >
<title>eth_type_trans (4,013 samples, 0.33%)</title><rect x="955.7" y="245" width="3.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="958.68" y="255.5" ></text>
</g>
<g >
<title>ktime_get_seconds (917 samples, 0.08%)</title><rect x="620.3" y="85" width="0.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="623.26" y="95.5" ></text>
</g>
<g >
<title>__memcpy (7,331 samples, 0.60%)</title><rect x="293.2" y="309" width="7.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="296.16" y="319.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (5,203 samples, 0.43%)</title><rect x="1031.0" y="325" width="5.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1034.04" y="335.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (4,567 samples, 0.37%)</title><rect x="264.6" y="357" width="4.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="267.56" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (410 samples, 0.03%)</title><rect x="625.0" y="53" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="628.03" y="63.5" ></text>
</g>
<g >
<title>__slab_free.isra.0 (5,707 samples, 0.47%)</title><rect x="799.1" y="69" width="5.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="802.06" y="79.5" ></text>
</g>
<g >
<title>rb_insert_color (1,112 samples, 0.09%)</title><rect x="1058.3" y="325" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1061.34" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (85,957 samples, 7.04%)</title><rect x="638.1" y="53" width="83.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="641.12" y="63.5" >_raw_spin..</text>
</g>
<g >
<title>lock_sock_nested (1,648 samples, 0.13%)</title><rect x="244.2" y="373" width="1.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="247.16" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1,478 samples, 0.12%)</title><rect x="244.3" y="357" width="1.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="247.32" y="367.5" ></text>
</g>
<g >
<title>do_epoll_wait (85,106 samples, 6.97%)</title><rect x="150.8" y="421" width="82.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="153.83" y="431.5" >do_epoll_..</text>
</g>
<g >
<title>tcp_push (5,027 samples, 0.41%)</title><rect x="1102.8" y="373" width="4.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1105.81" y="383.5" ></text>
</g>
<g >
<title>__list_del_entry_valid (1,508 samples, 0.12%)</title><rect x="1034.6" y="309" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1037.61" y="319.5" ></text>
</g>
<g >
<title>tcp_chrono_start (2,360 samples, 0.19%)</title><rect x="1130.9" y="357" width="2.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1133.90" y="367.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (45,725 samples, 3.74%)</title><rect x="185.8" y="405" width="44.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="188.79" y="415.5" >ep_i..</text>
</g>
<g >
<title>cubictcp_acked (5,006 samples, 0.41%)</title><rect x="804.7" y="69" width="4.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="807.72" y="79.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (14,840 samples, 1.22%)</title><rect x="1051.6" y="341" width="14.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1054.63" y="351.5" ></text>
</g>
<g >
<title>should_failslab (532 samples, 0.04%)</title><rect x="1182.0" y="325" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1185.02" y="335.5" ></text>
</g>
<g >
<title>tcp_rate_gen (2,748 samples, 0.23%)</title><rect x="841.9" y="69" width="2.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="844.86" y="79.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (2,472 samples, 0.20%)</title><rect x="591.4" y="117" width="2.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="594.41" y="127.5" ></text>
</g>
<g >
<title>cubictcp_cong_avoid (3,485 samples, 0.29%)</title><rect x="809.6" y="69" width="3.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="812.55" y="79.5" ></text>
</g>
<g >
<title>release_sock (10,322 samples, 0.85%)</title><rect x="342.7" y="389" width="10.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="345.68" y="399.5" ></text>
</g>
<g >
<title>sock_poll (40,914 samples, 3.35%)</title><rect x="190.4" y="389" width="39.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="193.44" y="399.5" >soc..</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (364,862 samples, 29.88%)</title><rect x="537.7" y="149" width="352.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="540.69" y="159.5" >ip_protocol_deliver_rcu</text>
</g>
<g >
<title>_raw_write_lock_irq (121 samples, 0.01%)</title><rect x="185.7" y="389" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="188.68" y="399.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (13,527 samples, 1.11%)</title><rect x="1089.7" y="373" width="13.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1092.74" y="383.5" ></text>
</g>
<g >
<title>tcp_check_space (1,278 samples, 0.10%)</title><rect x="1049.7" y="341" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1052.70" y="351.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (33,360 samples, 2.73%)</title><rect x="280.8" y="341" width="32.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="283.84" y="351.5" >__..</text>
</g>
<g >
<title>all (1,221,052 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (1,281 samples, 0.10%)</title><rect x="834.8" y="69" width="1.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="837.84" y="79.5" ></text>
</g>
<g >
<title>mutex_lock (233 samples, 0.02%)</title><rect x="230.2" y="405" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="233.23" y="415.5" ></text>
</g>
<g >
<title>sk_free (1,507 samples, 0.12%)</title><rect x="959.6" y="245" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="962.56" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2,895 samples, 0.24%)</title><rect x="338.5" y="389" width="2.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="341.55" y="399.5" ></text>
</g>
<g >
<title>tcp_poll (17,048 samples, 1.40%)</title><rect x="213.5" y="373" width="16.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="216.51" y="383.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (727 samples, 0.06%)</title><rect x="1050.9" y="341" width="0.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1053.93" y="351.5" ></text>
</g>
<g >
<title>ep_done_scan (2,111 samples, 0.17%)</title><rect x="183.8" y="405" width="2.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="186.75" y="415.5" ></text>
</g>
<g >
<title>ip_rcv (22,776 samples, 1.87%)</title><rect x="890.3" y="165" width="22.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="893.29" y="175.5" >i..</text>
</g>
<g >
<title>fput (4,219 samples, 0.35%)</title><rect x="137.7" y="405" width="4.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="140.69" y="415.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (112 samples, 0.01%)</title><rect x="879.2" y="37" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="882.19" y="47.5" ></text>
</g>
<g >
<title>ip_rcv_core (10,590 samples, 0.87%)</title><rect x="892.0" y="149" width="10.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="894.95" y="159.5" ></text>
</g>
<g >
<title>lock_sock_nested (1,381 samples, 0.11%)</title><rect x="341.3" y="389" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="344.35" y="399.5" ></text>
</g>
<g >
<title>kmalloc_reserve (13,771 samples, 1.13%)</title><rect x="1152.2" y="341" width="13.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1155.17" y="351.5" ></text>
</g>
<g >
<title>tcp_ack_tstamp (674 samples, 0.06%)</title><rect x="828.0" y="69" width="0.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="831.04" y="79.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (270 samples, 0.02%)</title><rect x="245.5" y="341" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="248.49" y="351.5" ></text>
</g>
<g >
<title>bpf_skops_write_hdr_opt.isra.0 (1,754 samples, 0.14%)</title><rect x="1014.8" y="325" width="1.7" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1017.80" y="335.5" ></text>
</g>
<g >
<title>__skb_clone (17,214 samples, 1.41%)</title><rect x="996.1" y="325" width="16.6" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="999.11" y="335.5" ></text>
</g>
<g >
<title>tcp_poll (18,403 samples, 1.51%)</title><rect x="119.9" y="373" width="17.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="122.90" y="383.5" ></text>
</g>
<g >
<title>skb_release_data (30,800 samples, 2.52%)</title><rect x="768.6" y="53" width="29.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="771.57" y="63.5" >sk..</text>
</g>
<g >
<title>tcp_newly_delivered (2,287 samples, 0.19%)</title><rect x="836.1" y="69" width="2.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="839.08" y="79.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (40,804 samples, 3.34%)</title><rect x="930.0" y="277" width="39.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="932.95" y="287.5" >dev..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (517 samples, 0.04%)</title><rect x="1180.8" y="309" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1183.81" y="319.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt (6,369 samples, 0.52%)</title><rect x="828.7" y="69" width="6.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="831.69" y="79.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1,684 samples, 0.14%)</title><rect x="1075.9" y="341" width="1.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1078.93" y="351.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (553,950 samples, 45.37%)</title><rect x="447.8" y="293" width="535.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="450.80" y="303.5" >__dev_queue_xmit</text>
</g>
<g >
<title>__mod_timer (3,811 samples, 0.31%)</title><rect x="621.7" y="69" width="3.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="624.74" y="79.5" ></text>
</g>
<g >
<title>__pv_queued_spin_lock_slowpath (220 samples, 0.02%)</title><rect x="279.1" y="325" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="282.06" y="335.5" ></text>
</g>
<g >
<title>skb_push (278 samples, 0.02%)</title><rect x="995.8" y="309" width="0.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="998.84" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (948 samples, 0.08%)</title><rect x="1164.2" y="293" width="0.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1167.18" y="303.5" ></text>
</g>
<g >
<title>__virt_addr_valid (3,887 samples, 0.32%)</title><rect x="309.0" y="293" width="3.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="312.03" y="303.5" ></text>
</g>
<g >
<title>napi_consume_skb (9,908 samples, 0.81%)</title><rect x="920.4" y="213" width="9.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="923.38" y="223.5" ></text>
</g>
<g >
<title>rb_next (625 samples, 0.05%)</title><rect x="827.4" y="69" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="830.43" y="79.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (10,465 samples, 0.86%)</title><rect x="902.2" y="149" width="10.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="905.19" y="159.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (410,753 samples, 33.64%)</title><rect x="515.4" y="181" width="396.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="518.36" y="191.5" >__netif_receive_skb_one_core</text>
</g>
<g >
<title>inet_sendmsg (3,661 samples, 0.30%)</title><rect x="332.3" y="405" width="3.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="335.33" y="415.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (1,788 samples, 0.15%)</title><rect x="1061.1" y="325" width="1.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1064.09" y="335.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (366,970 samples, 30.05%)</title><rect x="535.7" y="165" width="354.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="538.66" y="175.5" >ip_local_deliver_finish</text>
</g>
<g >
<title>tcp_rate_check_app_limited (6,334 samples, 0.52%)</title><rect x="1107.7" y="373" width="6.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1110.67" y="383.5" ></text>
</g>
<g >
<title>do_epoll_ctl (114,747 samples, 9.40%)</title><rect x="39.9" y="421" width="110.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="42.94" y="431.5" >do_epoll_ctl</text>
</g>
<g >
<title>tcp_stream_memory_free (435 samples, 0.04%)</title><rect x="1185.4" y="373" width="0.4" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1188.38" y="383.5" ></text>
</g>
<g >
<title>kfree_skbmem (1,559 samples, 0.13%)</title><rect x="812.9" y="69" width="1.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="815.92" y="79.5" ></text>
</g>
<g >
<title>check_stack_object (1,770 samples, 0.14%)</title><rect x="383.2" y="357" width="1.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="386.19" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (363 samples, 0.03%)</title><rect x="788.5" y="37" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="791.51" y="47.5" ></text>
</g>
<g >
<title>tcp_wfree (5,136 samples, 0.42%)</title><rect x="964.4" y="245" width="5.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="967.42" y="255.5" ></text>
</g>
<g >
<title>ktime_get (11,617 samples, 0.95%)</title><rect x="1038.5" y="341" width="11.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1041.47" y="351.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (598,283 samples, 49.00%)</title><rect x="417.9" y="325" width="578.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="420.94" y="335.5" >__ip_queue_xmit</text>
</g>
<g >
<title>_raw_spin_lock_bh (1,025 samples, 0.08%)</title><rect x="247.1" y="357" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="250.11" y="367.5" ></text>
</g>
<g >
<title>rb_first (757 samples, 0.06%)</title><rect x="1071.0" y="325" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1073.99" y="335.5" ></text>
</g>
<g >
<title>mod_timer (114 samples, 0.01%)</title><rect x="1073.6" y="309" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1076.60" y="319.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (355,331 samples, 29.10%)</title><rect x="546.9" y="133" width="343.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="549.91" y="143.5" >tcp_v4_rcv</text>
</g>
<g >
<title>kmem_cache_free (9,008 samples, 0.74%)</title><rect x="788.9" y="37" width="8.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="791.89" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2,200 samples, 0.18%)</title><rect x="347.0" y="373" width="2.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="349.95" y="383.5" ></text>
</g>
<g >
<title>read_tsc (8,273 samples, 0.68%)</title><rect x="871.3" y="53" width="8.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="874.30" y="63.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2,363 samples, 0.19%)</title><rect x="241.9" y="373" width="2.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="244.88" y="383.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (849 samples, 0.07%)</title><rect x="279.4" y="325" width="0.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="282.40" y="335.5" ></text>
</g>
<g >
<title>tcp_current_mss (12,507 samples, 1.02%)</title><rect x="1115.2" y="357" width="12.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1118.24" y="367.5" ></text>
</g>
<g >
<title>tcp_options_write (2,296 samples, 0.19%)</title><rect x="1025.7" y="325" width="2.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1028.69" y="335.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (2,947 samples, 0.24%)</title><rect x="1182.5" y="357" width="2.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1185.53" y="367.5" ></text>
</g>
<g >
<title>__mod_timer (1,655 samples, 0.14%)</title><rect x="1072.0" y="309" width="1.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1075.00" y="319.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (8,005 samples, 0.66%)</title><rect x="1066.0" y="341" width="7.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1068.97" y="351.5" ></text>
</g>
<g >
<title>process_backlog (426,240 samples, 34.91%)</title><rect x="501.0" y="197" width="411.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="504.02" y="207.5" >process_backlog</text>
</g>
<g >
<title>dst_release (4,369 samples, 0.36%)</title><rect x="616.0" y="85" width="4.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="619.04" y="95.5" ></text>
</g>
<g >
<title>___slab_alloc.isra.0 (4,655 samples, 0.38%)</title><rect x="1176.8" y="325" width="4.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1179.81" y="335.5" ></text>
</g>
<g >
<title>sock_put (992 samples, 0.08%)</title><rect x="593.8" y="117" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="596.80" y="127.5" ></text>
</g>
<g >
<title>ip_queue_xmit (161 samples, 0.01%)</title><rect x="1020.3" y="325" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1023.31" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (649 samples, 0.05%)</title><rect x="912.3" y="181" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="915.30" y="191.5" ></text>
</g>
<g >
<title>__check_object_size (12,279 samples, 1.01%)</title><rect x="373.6" y="373" width="11.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="376.55" y="383.5" ></text>
</g>
<g >
<title>sk_reset_timer (2,057 samples, 0.17%)</title><rect x="1071.7" y="325" width="2.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1074.72" y="335.5" ></text>
</g>
<g >
<title>__put_user_nocheck_4 (10,293 samples, 0.84%)</title><rect x="164.3" y="405" width="10.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="167.33" y="415.5" ></text>
</g>
<g >
<title>netif_skb_features (6,580 samples, 0.54%)</title><rect x="975.5" y="261" width="6.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="978.48" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1,679 samples, 0.14%)</title><rect x="277.7" y="341" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="280.65" y="351.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (28,704 samples, 2.35%)</title><rect x="109.9" y="405" width="27.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="112.95" y="415.5" >e..</text>
</g>
<g >
<title>_raw_write_lock_irq (221 samples, 0.02%)</title><rect x="109.7" y="405" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="112.73" y="415.5" ></text>
</g>
<g >
<title>__copy_skb_header (8,831 samples, 0.72%)</title><rect x="1004.2" y="309" width="8.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1007.21" y="319.5" ></text>
</g>
<g >
<title>tcp_send_mss (14,002 samples, 1.15%)</title><rect x="1113.8" y="373" width="13.5" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1116.79" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (93,515 samples, 7.66%)</title><rect x="630.8" y="69" width="90.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="633.82" y="79.5" >__wake_up_..</text>
</g>
<g >
<title>__list_del_entry_valid (448 samples, 0.04%)</title><rect x="499.5" y="213" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="502.54" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (11,576 samples, 0.95%)</title><rect x="944.5" y="197" width="11.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="947.46" y="207.5" ></text>
</g>
<g >
<title>netif_rx_internal (17,037 samples, 1.40%)</title><rect x="939.2" y="229" width="16.4" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="942.18" y="239.5" ></text>
</g>
<g >
<title>tcp_rack_update_reo_wnd (2,743 samples, 0.22%)</title><rect x="839.2" y="69" width="2.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="842.21" y="79.5" ></text>
</g>
<g >
<title>net_rx_action (468,537 samples, 38.37%)</title><rect x="477.2" y="229" width="452.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="480.17" y="239.5" >net_rx_action</text>
</g>
<g >
<title>inet_recvmsg (95,479 samples, 7.82%)</title><rect x="235.7" y="405" width="92.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="238.73" y="415.5" >inet_recvmsg</text>
</g>
<g >
<title>sk_reset_timer (4,956 samples, 0.41%)</title><rect x="621.1" y="85" width="4.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="624.15" y="95.5" ></text>
</g>
<g >
<title>__sk_dst_check (5,775 samples, 0.47%)</title><rect x="429.4" y="309" width="5.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="432.40" y="319.5" ></text>
</g>
<g >
<title>__check_object_size (13,061 samples, 1.07%)</title><rect x="300.5" y="309" width="12.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="303.46" y="319.5" ></text>
</g>
<g >
<title>kthread_should_stop (792 samples, 0.06%)</title><rect x="1189.2" y="421" width="0.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1192.23" y="431.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (6,975 samples, 0.57%)</title><rect x="862.0" y="85" width="6.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="864.97" y="95.5" ></text>
</g>
<g >
<title>iov_iter_kvec (634 samples, 0.05%)</title><rect x="335.9" y="405" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="338.87" y="415.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (865,675 samples, 70.90%)</title><rect x="352.7" y="389" width="836.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="355.66" y="399.5" >tcp_sendmsg_locked</text>
</g>
<g >
<title>tcp_rearm_rto (832 samples, 0.07%)</title><rect x="1062.8" y="325" width="0.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1065.82" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,156 samples, 0.09%)</title><rect x="589.8" y="117" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="592.85" y="127.5" ></text>
</g>
<g >
<title>ipv4_dst_check (2,370 samples, 0.19%)</title><rect x="432.7" y="293" width="2.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="435.69" y="303.5" ></text>
</g>
<g >
<title>__do_softirq (477,272 samples, 39.09%)</title><rect x="468.7" y="245" width="461.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="471.73" y="255.5" >__do_softirq</text>
</g>
<g >
<title>tcp_xmit_recovery (438 samples, 0.04%)</title><rect x="854.8" y="69" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="857.81" y="79.5" ></text>
</g>
<g >
<title>kernel_recvmsg (98,337 samples, 8.05%)</title><rect x="233.1" y="421" width="95.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="236.07" y="431.5" >kernel_recv..</text>
</g>
<g >
<title>memcpy_from_iter.isra.0 (527 samples, 0.04%)</title><rect x="1089.2" y="357" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1092.23" y="367.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (10,954 samples, 0.90%)</title><rect x="868.7" y="85" width="10.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="871.71" y="95.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1,985 samples, 0.16%)</title><rect x="636.2" y="53" width="1.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="639.21" y="63.5" ></text>
</g>
<g >
<title>__schedule (2,238 samples, 0.18%)</title><rect x="230.9" y="373" width="2.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="233.91" y="383.5" ></text>
</g>
<g >
<title>ipv4_mtu (5,853 samples, 0.48%)</title><rect x="1121.7" y="341" width="5.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1124.67" y="351.5" ></text>
</g>
<g >
<title>sk_reset_timer (1,733 samples, 0.14%)</title><rect x="1059.4" y="325" width="1.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1062.41" y="335.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (11,642 samples, 0.95%)</title><rect x="269.0" y="357" width="11.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="271.97" y="367.5" ></text>
</g>
<g >
<title>skb_free_head (771 samples, 0.06%)</title><rect x="797.6" y="37" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="800.59" y="47.5" ></text>
</g>
<g >
<title>cubictcp_cwnd_event (3,947 samples, 0.32%)</title><rect x="1016.5" y="325" width="3.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1019.49" y="335.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (2,128 samples, 0.17%)</title><rect x="242.1" y="357" width="2.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="245.10" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1,494 samples, 0.12%)</title><rect x="943.0" y="197" width="1.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="946.02" y="207.5" ></text>
</g>
<g >
<title>tcp_rcv_established (298,799 samples, 24.47%)</title><rect x="598.9" y="101" width="288.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="601.91" y="111.5" >tcp_rcv_established</text>
</g>
<g >
<title>sock_poll (27,202 samples, 2.23%)</title><rect x="111.4" y="389" width="26.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="114.40" y="399.5" >s..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (144 samples, 0.01%)</title><rect x="804.6" y="69" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="807.58" y="79.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rcx (484 samples, 0.04%)</title><rect x="11.6" y="469" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="14.63" y="479.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (6,959 samples, 0.57%)</title><rect x="879.3" y="85" width="6.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="882.30" y="95.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (533 samples, 0.04%)</title><rect x="384.9" y="357" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="387.90" y="367.5" ></text>
</g>
<g >
<title>read_tsc (8,355 samples, 0.68%)</title><rect x="319.9" y="309" width="8.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="322.93" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (337 samples, 0.03%)</title><rect x="1060.8" y="293" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1063.76" y="303.5" ></text>
</g>
<g >
<title>ret_from_fork (1,218,881 samples, 99.82%)</title><rect x="12.1" y="469" width="1177.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="15.10" y="479.5" >ret_from_fork</text>
</g>
<g >
<title>skb_release_data (7,817 samples, 0.64%)</title><rect x="921.8" y="197" width="7.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="924.84" y="207.5" ></text>
</g>
<g >
<title>__tcp_select_window (2,123 samples, 0.17%)</title><rect x="1012.7" y="325" width="2.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1015.75" y="335.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1,082 samples, 0.09%)</title><rect x="913.6" y="213" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="916.64" y="223.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (3,526 samples, 0.29%)</title><rect x="961.0" y="245" width="3.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="964.01" y="255.5" ></text>
</g>
<g >
<title>read_tsc (8,559 samples, 0.70%)</title><rect x="1041.4" y="325" width="8.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1044.42" y="335.5" ></text>
</g>
<g >
<title>rb_erase (2,725 samples, 0.22%)</title><rect x="823.5" y="69" width="2.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="826.51" y="79.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (17,652 samples, 1.45%)</title><rect x="1165.5" y="341" width="17.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1168.47" y="351.5" ></text>
</g>
<g >
<title>_copy_from_iter (12,609 samples, 1.03%)</title><rect x="1077.6" y="373" width="12.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1080.56" y="383.5" ></text>
</g>
<g >
<title>skb_release_head_state (578 samples, 0.05%)</title><rect x="929.4" y="197" width="0.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="932.39" y="207.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (133 samples, 0.01%)</title><rect x="277.5" y="341" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="280.52" y="351.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (301,718 samples, 24.71%)</title><rect x="596.1" y="117" width="291.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="599.08" y="127.5" >tcp_v4_do_rcv</text>
</g>
<g >
<title>__list_del_entry_valid (4,955 samples, 0.41%)</title><rect x="159.5" y="405" width="4.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="162.55" y="415.5" ></text>
</g>
<g >
<title>tcp_skb_entail (6,058 samples, 0.50%)</title><rect x="1127.3" y="373" width="5.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1130.32" y="383.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (13,274 samples, 1.09%)</title><rect x="300.2" y="325" width="12.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="303.25" y="335.5" ></text>
</g>
<g >
<title>ipv4_dst_check (446 samples, 0.04%)</title><rect x="598.5" y="101" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="601.47" y="111.5" ></text>
</g>
<g >
<title>ip_output (1,294 samples, 0.11%)</title><rect x="994.6" y="309" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="997.59" y="319.5" ></text>
</g>
<g >
<title>check_stack_object (203 samples, 0.02%)</title><rect x="312.8" y="293" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="315.78" y="303.5" ></text>
</g>
<g >
<title>skb_network_protocol (2,920 samples, 0.24%)</title><rect x="979.0" y="245" width="2.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="982.02" y="255.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (728 samples, 0.06%)</title><rect x="912.9" y="213" width="0.7" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="915.93" y="223.5" ></text>
</g>
<g >
<title>__list_del_entry_valid (431 samples, 0.04%)</title><rect x="798.6" y="69" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="801.65" y="79.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2,238 samples, 0.18%)</title><rect x="230.9" y="405" width="2.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="233.91" y="415.5" ></text>
</g>
<g >
<title>kernel_sendmsg (891,080 samples, 72.98%)</title><rect x="328.1" y="421" width="861.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="331.10" y="431.5" >kernel_sendmsg</text>
</g>
<g >
<title>inet_send_prepare (2,106 samples, 0.17%)</title><rect x="333.8" y="389" width="2.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="336.83" y="399.5" ></text>
</g>
<g >
<title>iov_iter_kvec (105 samples, 0.01%)</title><rect x="328.0" y="405" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="331.00" y="415.5" ></text>
</g>
<g >
<title>schedule (2,238 samples, 0.18%)</title><rect x="230.9" y="389" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="233.91" y="399.5" ></text>
</g>
<g >
<title>__ip_local_out (11,113 samples, 0.91%)</title><rect x="983.9" y="293" width="10.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="986.85" y="303.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (2,501 samples, 0.20%)</title><rect x="969.4" y="277" width="2.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="972.38" y="287.5" ></text>
</g>
<g >
<title>mutex_unlock (472 samples, 0.04%)</title><rect x="230.5" y="405" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="233.45" y="415.5" ></text>
</g>
<g >
<title>loopback_xmit (37,375 samples, 3.06%)</title><rect x="933.3" y="261" width="36.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="936.26" y="271.5" >loo..</text>
</g>
<g >
<title>tcp_send_delayed_ack (1,694 samples, 0.14%)</title><rect x="886.0" y="85" width="1.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="889.02" y="95.5" ></text>
</g>
<g >
<title>__napi_poll (427,319 samples, 35.00%)</title><rect x="500.0" y="213" width="412.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="502.97" y="223.5" >__napi_poll</text>
</g>
<g >
<title>tcp_filter (1,369 samples, 0.11%)</title><rect x="594.8" y="117" width="1.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="597.76" y="127.5" ></text>
</g>
<g >
<title>ip_local_out (11,864 samples, 0.97%)</title><rect x="983.1" y="309" width="11.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="986.13" y="319.5" ></text>
</g>
<g >
<title>mutex_lock (6,129 samples, 0.50%)</title><rect x="141.8" y="405" width="5.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="144.76" y="415.5" ></text>
</g>
<g >
<title>rb_first (1,330 samples, 0.11%)</title><rect x="826.1" y="69" width="1.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="829.15" y="79.5" ></text>
</g>
<g >
<title>sock_rfree (1,241 samples, 0.10%)</title><rect x="313.1" y="357" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="316.08" y="367.5" ></text>
</g>
<g >
<title>skb_clone (4,723 samples, 0.39%)</title><rect x="1020.5" y="325" width="4.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1023.46" y="335.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (17,570 samples, 1.44%)</title><rect x="517.4" y="165" width="16.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="520.36" y="175.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (3,565 samples, 0.29%)</title><rect x="848.3" y="69" width="3.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="851.26" y="79.5" ></text>
</g>
<g >
<title>kthread (1,218,881 samples, 99.82%)</title><rect x="12.1" y="453" width="1177.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="15.10" y="463.5" >kthread</text>
</g>
<g >
<title>tcp_data_ready (988 samples, 0.08%)</title><rect x="861.0" y="85" width="1.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="864.02" y="95.5" ></text>
</g>
<g >
<title>tcp_wmem_schedule (795 samples, 0.07%)</title><rect x="1188.5" y="373" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1191.46" y="383.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (287 samples, 0.02%)</title><rect x="1165.1" y="309" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1168.10" y="319.5" ></text>
</g>
<g >
<title>__mod_timer (1,365 samples, 0.11%)</title><rect x="1059.8" y="309" width="1.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1062.77" y="319.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (2,481 samples, 0.20%)</title><rect x="1036.1" y="325" width="2.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1039.07" y="335.5" ></text>
</g>
<g >
<title>__fget_light (26,379 samples, 2.16%)</title><rect x="84.2" y="405" width="25.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="87.24" y="415.5" >_..</text>
</g>
<g >
<title>_raw_spin_lock_bh (1,205 samples, 0.10%)</title><rect x="341.5" y="373" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="344.52" y="383.5" ></text>
</g>
<g >
<title>__inet_lookup_established (22,335 samples, 1.83%)</title><rect x="564.0" y="117" width="21.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="567.03" y="127.5" >_..</text>
</g>
<g >
<title>skb_csum_hwoffload_help (1,327 samples, 0.11%)</title><rect x="981.8" y="261" width="1.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="984.84" y="271.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (12,463 samples, 1.02%)</title><rect x="1153.4" y="325" width="12.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1156.43" y="335.5" ></text>
</g>
<g >
<title>__xfrm_policy_check2.constprop.0 (3,485 samples, 0.29%)</title><rect x="586.5" y="117" width="3.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="589.48" y="127.5" ></text>
</g>
<g >
<title>ip_finish_output2 (566,603 samples, 46.40%)</title><rect x="435.6" y="309" width="547.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="438.57" y="319.5" >ip_finish_output2</text>
</g>
<g >
<title>ktime_get (10,181 samples, 0.83%)</title><rect x="869.5" y="69" width="9.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="872.46" y="79.5" ></text>
</g>
<g >
<title>tcp_ack (138,254 samples, 11.32%)</title><rect x="721.6" y="85" width="133.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="724.63" y="95.5" >tcp_ack</text>
</g>
<g >
<title>mutex_unlock (3,248 samples, 0.27%)</title><rect x="147.7" y="405" width="3.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="150.69" y="415.5" ></text>
</g>
<g >
<title>skb_push (683 samples, 0.06%)</title><rect x="1025.0" y="325" width="0.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1028.03" y="335.5" ></text>
</g>
<g >
<title>__virt_addr_valid (7,295 samples, 0.60%)</title><rect x="376.1" y="357" width="7.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="379.14" y="367.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (484,087 samples, 39.65%)</title><rect x="462.1" y="277" width="467.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="465.14" y="287.5" >__local_bh_enable_ip</text>
</g>
<g >
<title>tcp_check_space (5,975 samples, 0.49%)</title><rect x="855.2" y="85" width="5.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="858.24" y="95.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (54,017 samples, 4.42%)</title><rect x="1133.2" y="373" width="52.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1136.18" y="383.5" >tcp_s..</text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1,687 samples, 0.14%)</title><rect x="10.0" y="469" width="1.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (990 samples, 0.08%)</title><rect x="240.9" y="373" width="1.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="243.92" y="383.5" ></text>
</g>
<g >
<title>validate_xmit_skb.isra.0 (11,720 samples, 0.96%)</title><rect x="971.8" y="277" width="11.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="974.80" y="287.5" ></text>
</g>
<g >
<title>___slab_alloc.isra.0 (5,746 samples, 0.47%)</title><rect x="1159.5" y="309" width="5.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1162.55" y="319.5" ></text>
</g>
<g >
<title>raw_local_deliver (6,327 samples, 0.52%)</title><rect x="540.8" y="133" width="6.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="543.79" y="143.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (2,723 samples, 0.22%)</title><rect x="887.7" y="117" width="2.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="890.66" y="127.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (3,217 samples, 0.26%)</title><rect x="851.7" y="69" width="3.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="854.70" y="79.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1,289 samples, 0.11%)</title><rect x="337.3" y="389" width="1.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="340.30" y="399.5" ></text>
</g>
<g >
<title>fput (255 samples, 0.02%)</title><rect x="230.0" y="405" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="232.98" y="415.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.0 (2,436 samples, 0.20%)</title><rect x="1063.6" y="325" width="2.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1066.62" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_free (9,401 samples, 0.77%)</title><rect x="814.4" y="69" width="9.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="817.43" y="79.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (731 samples, 0.06%)</title><rect x="1181.3" y="325" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1184.31" y="335.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (716,217 samples, 58.66%)</title><rect x="385.4" y="373" width="692.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="388.42" y="383.5" >__tcp_push_pending_frames</text>
</g>
<g >
<title>tcp_recvmsg_locked (80,341 samples, 6.58%)</title><rect x="250.4" y="373" width="77.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="253.36" y="383.5" >tcp_recv..</text>
</g>
<g >
<title>tcp_stream_memory_free (2,172 samples, 0.18%)</title><rect x="135.6" y="357" width="2.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="138.59" y="367.5" ></text>
</g>
<g >
<title>__alloc_skb (47,882 samples, 3.92%)</title><rect x="1136.3" y="357" width="46.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1139.26" y="367.5" >__al..</text>
</g>
<g >
<title>__wake_up_sync_key (454 samples, 0.04%)</title><rect x="721.2" y="69" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="724.19" y="79.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,251 samples, 0.10%)</title><rect x="914.7" y="213" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="917.68" y="223.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1,823 samples, 0.15%)</title><rect x="614.3" y="85" width="1.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="617.28" y="95.5" ></text>
</g>
<g >
<title>__slab_free.isra.0 (5,201 samples, 0.43%)</title><rect x="783.5" y="37" width="5.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="786.49" y="47.5" ></text>
</g>
<g >
<title>inet_ehashfn (4,066 samples, 0.33%)</title><rect x="581.7" y="101" width="3.9" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="584.68" y="111.5" ></text>
</g>
<g >
<title>tcp_recvmsg (92,335 samples, 7.56%)</title><rect x="238.8" y="389" width="89.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="241.77" y="399.5" >tcp_recvmsg</text>
</g>
<g >
<title>ip_send_check (8,356 samples, 0.68%)</title><rect x="986.5" y="277" width="8.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="989.52" y="287.5" ></text>
</g>
<g >
<title>server_thread (1,218,881 samples, 99.82%)</title><rect x="12.1" y="437" width="1177.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="15.10" y="447.5" >server_thread</text>
</g>
<g >
<title>__usecs_to_jiffies (725 samples, 0.06%)</title><rect x="1070.2" y="325" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1073.25" y="335.5" ></text>
</g>
<g >
<title>tcp_sendmsg (882,411 samples, 72.27%)</title><rect x="336.5" y="405" width="852.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="339.48" y="415.5" >tcp_sendmsg</text>
</g>
<g >
<title>tcp_tx_timestamp (2,750 samples, 0.23%)</title><rect x="1185.8" y="373" width="2.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1188.80" y="383.5" ></text>
</g>
<g >
<title>__tcp_select_window (166 samples, 0.01%)</title><rect x="268.8" y="341" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="271.81" y="351.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (3,870 samples, 0.32%)</title><rect x="844.5" y="69" width="3.8" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="847.52" y="79.5" ></text>
</g>
<g >
<title>tcp_write_xmit (714,818 samples, 58.54%)</title><rect x="386.8" y="357" width="690.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="389.77" y="367.5" >tcp_write_xmit</text>
</g>
<g >
<title>__tcp_transmit_skb (661,494 samples, 54.17%)</title><rect x="399.2" y="341" width="639.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="402.22" y="351.5" >__tcp_transmit_skb</text>
</g>
<g >
<title>__usecs_to_jiffies (356 samples, 0.03%)</title><rect x="834.4" y="53" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="837.44" y="63.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (15,886 samples, 1.30%)</title><rect x="940.3" y="213" width="15.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="943.30" y="223.5" ></text>
</g>
<g >
<title>__fdget (1,203 samples, 0.10%)</title><rect x="83.1" y="405" width="1.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="86.08" y="415.5" ></text>
</g>
<g >
<title>tcp_release_cb (3,702 samples, 0.30%)</title><rect x="349.1" y="373" width="3.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="352.08" y="383.5" ></text>
</g>
<g >
<title>__ip_finish_output (4,379 samples, 0.36%)</title><rect x="425.2" y="309" width="4.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="428.16" y="319.5" ></text>
</g>
<g >
<title>skb_release_head_state (320 samples, 0.03%)</title><rect x="798.3" y="53" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="801.34" y="63.5" ></text>
</g>
<g >
<title>ktime_get (10,369 samples, 0.85%)</title><rect x="318.0" y="325" width="10.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="320.98" y="335.5" ></text>
</g>
<g >
<title>kfree_skbmem (4,577 samples, 0.37%)</title><rect x="915.9" y="213" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="918.89" y="223.5" ></text>
</g>
<g >
<title>__kfree_skb (32,054 samples, 2.63%)</title><rect x="767.7" y="69" width="30.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="770.67" y="79.5" >__..</text>
</g>
<g >
<title>__list_add_valid (682 samples, 0.06%)</title><rect x="1034.0" y="309" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1036.96" y="319.5" ></text>
</g>
<g >
<title>nf_conntrack_put (467 samples, 0.04%)</title><rect x="591.0" y="117" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="593.96" y="127.5" ></text>
</g>
<g >
<title>__netif_rx (17,476 samples, 1.43%)</title><rect x="938.8" y="245" width="16.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="941.76" y="255.5" ></text>
</g>
<g >
<title>__put_user_nocheck_8 (9,800 samples, 0.80%)</title><rect x="174.3" y="405" width="9.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="177.28" y="415.5" ></text>
</g>
<g >
<title>do_softirq (483,097 samples, 39.56%)</title><rect x="463.1" y="261" width="466.9" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="466.10" y="271.5" >do_softirq</text>
</g>
<g >
<title>tcp_rcv_space_adjust (13,671 samples, 1.12%)</title><rect x="314.8" y="357" width="13.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="317.79" y="367.5" ></text>
</g>
<g >
<title>mod_timer (532 samples, 0.04%)</title><rect x="625.4" y="69" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="628.42" y="79.5" ></text>
</g>
<g >
<title>sock_def_readable (99,021 samples, 8.11%)</title><rect x="625.9" y="85" width="95.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="628.94" y="95.5" >sock_def_re..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (2,152 samples, 0.18%)</title><rect x="231.0" y="357" width="2.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="233.99" y="367.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (453 samples, 0.04%)</title><rect x="1049.3" y="309" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1052.26" y="319.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (11,160 samples, 0.91%)</title><rect x="317.2" y="341" width="10.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="320.22" y="351.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (894 samples, 0.07%)</title><rect x="585.6" y="117" width="0.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="588.61" y="127.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (867 samples, 0.07%)</title><rect x="263.7" y="357" width="0.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="266.72" y="367.5" ></text>
</g>
<g >
<title>tcp_rack_advance (954 samples, 0.08%)</title><rect x="838.3" y="69" width="0.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="841.29" y="79.5" ></text>
</g>
<g >
<title>tcp_release_cb (2,343 samples, 0.19%)</title><rect x="248.1" y="357" width="2.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="251.10" y="367.5" ></text>
</g>
</g>
</svg>
